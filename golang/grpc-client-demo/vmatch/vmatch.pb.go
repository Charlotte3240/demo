//
// File: asv.proto
// Version: 0.1.0
// ----
// Copyright (c) 360 Shuke Corporation. All rights reserved.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: vmatch.proto

// FYI: It was first set as "com.360shuke.aibot", but is not a valid package name,
// so, it is ended as "com.qihoo.shuke.aibot"

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//Meta information for audio data
type AudioSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// false: little endian(default), true: big endian
	ReversesBytes bool `protobuf:"varint,1,opt,name=reverses_bytes,json=reversesBytes,proto3" json:"reverses_bytes,omitempty"`
	// num channels (default 1)
	NumChannels uint32 `protobuf:"varint,2,opt,name=num_channels,json=numChannels,proto3" json:"num_channels,omitempty"`
	// sample rate (default 8000)
	SampleRate uint32 `protobuf:"varint,3,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	// bits per sample (default 16)
	BitsPerSample uint32 `protobuf:"varint,4,opt,name=bits_per_sample,json=bitsPerSample,proto3" json:"bits_per_sample,omitempty"`
}

func (x *AudioSpec) Reset() {
	*x = AudioSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vmatch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioSpec) ProtoMessage() {}

func (x *AudioSpec) ProtoReflect() protoreflect.Message {
	mi := &file_vmatch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioSpec.ProtoReflect.Descriptor instead.
func (*AudioSpec) Descriptor() ([]byte, []int) {
	return file_vmatch_proto_rawDescGZIP(), []int{0}
}

func (x *AudioSpec) GetReversesBytes() bool {
	if x != nil {
		return x.ReversesBytes
	}
	return false
}

func (x *AudioSpec) GetNumChannels() uint32 {
	if x != nil {
		return x.NumChannels
	}
	return 0
}

func (x *AudioSpec) GetSampleRate() uint32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

func (x *AudioSpec) GetBitsPerSample() uint32 {
	if x != nil {
		return x.BitsPerSample
	}
	return 0
}

type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session   string     `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`                      // session ID
	AudioInfo *AudioSpec `protobuf:"bytes,2,opt,name=audio_info,json=audioInfo,proto3" json:"audio_info,omitempty"` // audio information
	AppCode   string     `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`                      //业务编码
	Customer  string     `protobuf:"bytes,4,opt,name=customer,proto3" json:"customer,omitempty"`                    //自定义字段，扩展字段
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vmatch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmatch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_vmatch_proto_rawDescGZIP(), []int{1}
}

func (x *InitRequest) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *InitRequest) GetAudioInfo() *AudioSpec {
	if x != nil {
		return x.AudioInfo
	}
	return nil
}

func (x *InitRequest) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *InitRequest) GetCustomer() string {
	if x != nil {
		return x.Customer
	}
	return ""
}

type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`         // error code. 0: succeed, other value: failed
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // describe the detail reasons if failed
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vmatch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vmatch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_vmatch_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorMessage) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ErrorMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type InitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session      string        `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	ErrorMessage *ErrorMessage `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vmatch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmatch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_vmatch_proto_rawDescGZIP(), []int{3}
}

func (x *InitResponse) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *InitResponse) GetErrorMessage() *ErrorMessage {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session   string `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`                      // session ID
	AudioData []byte `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"` // 语音流
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vmatch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_vmatch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_vmatch_proto_rawDescGZIP(), []int{4}
}

func (x *Request) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *Request) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session      string        `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`   // session ID
	Status       string        `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`     // 状态， 1成功，表示找到了对应的匹配值，0失败，表示没找到对应的值
	Number       string        `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`     // 当status=1，number表示找到的对应的值
	Score        float32       `protobuf:"fixed32,4,opt,name=score,proto3" json:"score,omitempty"`     // 相识度得分
	Bdumber      string        `protobuf:"bytes,5,opt,name=bdumber,proto3" json:"bdumber,omitempty"`   // 当status=1，number表示找到的对应的值
	Bdscore      float32       `protobuf:"fixed32,6,opt,name=bdscore,proto3" json:"bdscore,omitempty"` // 相识度得分
	AppCode      string        `protobuf:"bytes,7,opt,name=appCode,proto3" json:"appCode,omitempty"`   // 业务编码，区分不同的业务
	Customer     string        `protobuf:"bytes,8,opt,name=customer,proto3" json:"customer,omitempty"` // 自定义字段，或者做扩展字段使用
	Msg          string        `protobuf:"bytes,9,opt,name=msg,proto3" json:"msg,omitempty"`           // 当失败时，失败的原因
	ErrorMessage *ErrorMessage `protobuf:"bytes,10,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vmatch_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_vmatch_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_vmatch_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Response) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Response) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Response) GetBdumber() string {
	if x != nil {
		return x.Bdumber
	}
	return ""
}

func (x *Response) GetBdscore() float32 {
	if x != nil {
		return x.Bdscore
	}
	return 0
}

func (x *Response) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *Response) GetCustomer() string {
	if x != nil {
		return x.Customer
	}
	return ""
}

func (x *Response) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Response) GetErrorMessage() *ErrorMessage {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

type TerminateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// session ID
	Session string `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *TerminateRequest) Reset() {
	*x = TerminateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vmatch_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateRequest) ProtoMessage() {}

func (x *TerminateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmatch_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateRequest.ProtoReflect.Descriptor instead.
func (*TerminateRequest) Descriptor() ([]byte, []int) {
	return file_vmatch_proto_rawDescGZIP(), []int{6}
}

func (x *TerminateRequest) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

type TerminateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error code. 0: succeed, other value: failed
	ErrorCode    int32         `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage *ErrorMessage `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *TerminateResponse) Reset() {
	*x = TerminateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vmatch_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateResponse) ProtoMessage() {}

func (x *TerminateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmatch_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateResponse.ProtoReflect.Descriptor instead.
func (*TerminateResponse) Descriptor() ([]byte, []int) {
	return file_vmatch_proto_rawDescGZIP(), []int{7}
}

func (x *TerminateResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *TerminateResponse) GetErrorMessage() *ErrorMessage {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

var File_vmatch_proto protoreflect.FileDescriptor

var file_vmatch_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22,
	0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65, 0x2e,
	0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x09, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e,
	0x75, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x62,
	0x69, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x69, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a,
	0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68,
	0x75, 0x6b, 0x65, 0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x22, 0x52, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7f, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x55, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68,
	0x6f, 0x6f, 0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65, 0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0xbd, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x64, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x64, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x64, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x62, 0x64, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x55, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65, 0x2e, 0x61, 0x69, 0x62,
	0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x10, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f,
	0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65, 0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0xd6, 0x03, 0x0a, 0x0b, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x6b, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x2f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65, 0x2e, 0x61,
	0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65, 0x2e,
	0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6f, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68,
	0x75, 0x6b, 0x65, 0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65,
	0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x12, 0x6d, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f,
	0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65, 0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68,
	0x75, 0x6b, 0x65, 0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7a, 0x0a, 0x09, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65,
	0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f,
	0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65, 0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x54, 0x0a,
	0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65,
	0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2e, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x08, 0x41, 0x53, 0x52, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x69, 0x68, 0x6f, 0x6f, 0x2e, 0x73, 0x68, 0x75, 0x6b, 0x65,
	0x2e, 0x61, 0x69, 0x62, 0x6f, 0x74, 0x2f, 0x76, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vmatch_proto_rawDescOnce sync.Once
	file_vmatch_proto_rawDescData = file_vmatch_proto_rawDesc
)

func file_vmatch_proto_rawDescGZIP() []byte {
	file_vmatch_proto_rawDescOnce.Do(func() {
		file_vmatch_proto_rawDescData = protoimpl.X.CompressGZIP(file_vmatch_proto_rawDescData)
	})
	return file_vmatch_proto_rawDescData
}

var file_vmatch_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_vmatch_proto_goTypes = []interface{}{
	(*AudioSpec)(nil),         // 0: com.qihoo.shuke.aibot.vmatch.proto.AudioSpec
	(*InitRequest)(nil),       // 1: com.qihoo.shuke.aibot.vmatch.proto.InitRequest
	(*ErrorMessage)(nil),      // 2: com.qihoo.shuke.aibot.vmatch.proto.ErrorMessage
	(*InitResponse)(nil),      // 3: com.qihoo.shuke.aibot.vmatch.proto.InitResponse
	(*Request)(nil),           // 4: com.qihoo.shuke.aibot.vmatch.proto.Request
	(*Response)(nil),          // 5: com.qihoo.shuke.aibot.vmatch.proto.Response
	(*TerminateRequest)(nil),  // 6: com.qihoo.shuke.aibot.vmatch.proto.TerminateRequest
	(*TerminateResponse)(nil), // 7: com.qihoo.shuke.aibot.vmatch.proto.TerminateResponse
}
var file_vmatch_proto_depIdxs = []int32{
	0, // 0: com.qihoo.shuke.aibot.vmatch.proto.InitRequest.audio_info:type_name -> com.qihoo.shuke.aibot.vmatch.proto.AudioSpec
	2, // 1: com.qihoo.shuke.aibot.vmatch.proto.InitResponse.error_message:type_name -> com.qihoo.shuke.aibot.vmatch.proto.ErrorMessage
	2, // 2: com.qihoo.shuke.aibot.vmatch.proto.Response.error_message:type_name -> com.qihoo.shuke.aibot.vmatch.proto.ErrorMessage
	2, // 3: com.qihoo.shuke.aibot.vmatch.proto.TerminateResponse.error_message:type_name -> com.qihoo.shuke.aibot.vmatch.proto.ErrorMessage
	1, // 4: com.qihoo.shuke.aibot.vmatch.proto.SpeechMatch.init:input_type -> com.qihoo.shuke.aibot.vmatch.proto.InitRequest
	4, // 5: com.qihoo.shuke.aibot.vmatch.proto.SpeechMatch.match_stream:input_type -> com.qihoo.shuke.aibot.vmatch.proto.Request
	4, // 6: com.qihoo.shuke.aibot.vmatch.proto.SpeechMatch.match_response:input_type -> com.qihoo.shuke.aibot.vmatch.proto.Request
	6, // 7: com.qihoo.shuke.aibot.vmatch.proto.SpeechMatch.terminate:input_type -> com.qihoo.shuke.aibot.vmatch.proto.TerminateRequest
	3, // 8: com.qihoo.shuke.aibot.vmatch.proto.SpeechMatch.init:output_type -> com.qihoo.shuke.aibot.vmatch.proto.InitResponse
	5, // 9: com.qihoo.shuke.aibot.vmatch.proto.SpeechMatch.match_stream:output_type -> com.qihoo.shuke.aibot.vmatch.proto.Response
	5, // 10: com.qihoo.shuke.aibot.vmatch.proto.SpeechMatch.match_response:output_type -> com.qihoo.shuke.aibot.vmatch.proto.Response
	7, // 11: com.qihoo.shuke.aibot.vmatch.proto.SpeechMatch.terminate:output_type -> com.qihoo.shuke.aibot.vmatch.proto.TerminateResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_vmatch_proto_init() }
func file_vmatch_proto_init() {
	if File_vmatch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vmatch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vmatch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vmatch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vmatch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vmatch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vmatch_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vmatch_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vmatch_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vmatch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vmatch_proto_goTypes,
		DependencyIndexes: file_vmatch_proto_depIdxs,
		MessageInfos:      file_vmatch_proto_msgTypes,
	}.Build()
	File_vmatch_proto = out.File
	file_vmatch_proto_rawDesc = nil
	file_vmatch_proto_goTypes = nil
	file_vmatch_proto_depIdxs = nil
}
